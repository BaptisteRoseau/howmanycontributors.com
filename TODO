# TODO

Backend, for a given URL

- [X] Make sure the URL follows: http[s]://github.com/OWNER/REPO
- [X] Search in the cache for the results
- [X] Use scrapper to parse the URL's HTML: <https://docs.rs/scraper/0.19.0/scraper/> (Respect the rate limit)
- [X] Search for "Contributors" and optionally "Used by" in the HTML
- [X] Cache results in a key/value Redis for 3 days + rand(1day) with: [OWNER/REPO, contributors, used_by]
- [X] Search for dependencies at $URL/network/dependencies
- [X] Repeat for each dependencies
- [X] Return the total of contributors and details of the dependencies
- [ ] (WIP) Add a rate limiter per IP

Frontend

- [X] Add a field for the URL
- [ ] Make sure the URL follows: http[s]://github.com/OWNER/REPO
- [ ] Display warnings about the data accuracy
- [X] Show the total number of contributors in a big number
- [ ] Show the details in a table
- [X] Add an error popup template

Unnecessary but I like it:

- [X] Prometheus
- [X] Grafana
- [ ] Loki
- [ ] Leaderboard of most contributions per users (Kiki meters for the community) (After actually publishing the service)

When finished:

- [ ] Add a button to get back to the top of the page
- [ ] Add a "Feedback" button
- [ ] SSL/TLS everywhere
- [ ] Post on Twitter & LinkedIn
- [ ] Find how to import/export Grafana dashboards
- [ ] ACL access for Redis
- [ ] Remove dead code
- [ ] Add tests
- [ ] Add documentation
- [ ] Add reverse-proxy to access the ressources
- [ ] Maybe familiarize yourself with Kubernetes

To test via curl:

```sh
curl -v --include --no-buffer --header "Connection: Upgrade" --header "Upgrade: websocket" --header "Host: example.com:80" --header "Origin: http://example.com:80" --header "Sec-WebSocket-Key: SGVsbG8sIHdvcmxkIQ==" --header "Sec-WebSocket-Version: 13" http://localhost:8090/dependencies?link="https://github.com/tokio-rs/loom"
```
